---
- hosts: all
  become: true
  tasks:
    - name: Fetch port data from URL
      uri:
        url: https://stats.osbornetech.support/ansible/ufw/ufw_rules.json
        method: GET
        return_content: yes
      register: port_data
      ignore_errors: true
      check_mode: no

    - name: Debug port_data content
      debug:
        var: port_data.content
      when: port_data.content is defined

    - name: Debug failed status
      debug:
        var: port_data.failed
      when: port_data.failed is defined

    - name: Debug msg status
      debug:
        var: port_data.msg
      when: port_data.msg is defined

    - name: Debug status code
      debug:
        var: port_data.status
      when: port_data.status is defined

    - name: Parse JSON data
      set_fact:
        ip_list: "{{ port_data.content | from_json }}" # Rename port_list to ip_list
      when: port_data.content is defined and port_data.status == 200
      ignore_errors: true

    - name: Check if JSON parsing failed or URL fetch failed
      fail:
        msg: "Failed to parse JSON data or fetch URL. Check 'port_data' for details."
      when: ip_list is undefined or port_data.failed or port_data.status != 200

    - name: Gather existing UFW rules
      shell: ufw status numbered | awk '{print $1, $2, $3, $4, $5}' # Update awk to match the output you provided
      register: current_ufw_rules
      changed_when: false
      when: ip_list is defined

    - name: Extract rule details
      set_fact:
        ufw_rules_list: >-
          {% set rules = [] %}
          {% for line in current_ufw_rules.stdout_lines %}
            {% set parts = line.split() %}
            {% if parts|length >= 3 %}
              {% set rule = {'num': parts[0], 'to': parts[1], 'action': parts[2], 'from': parts[3], 'comment': parts[4] if parts|length > 4 else None} %}
              {{ rules.append(rule) }}
            {% endif %}
          {% endfor %}
          {{ rules }}
      when: ip_list is defined

    - name: Configure UFW rules
      block:
        - name: Add UFW rule
          ufw:
            rule: allow
            src: "{{ item.port }}"  # Use 'port' as the source IP
            comment: "{{ item.comment | default('Managed by Ansible') }}"
          loop: "{{ ip_list }}" # Use ip_list
          when:
            - not current_ufw_rules.stdout_lines | map('regex_search', '.*' + item.port + '.*') | select | list

        - name: Remove outdated UFW rules
          ufw:
            rule: delete
            num: "{{ item.num }}"
          loop: "{{ query('list', ufw_rules_list) }}"
          when: ip_list | map(attribute='port') | select | list
      when: ip_list is defined
