---
- hosts: all
  become: true
  tasks:
    - name: Fetch IP data from URL
      uri:
        url: https://stats.osbornetech.support/ansible/ufw/ufw_rules.json
        method: GET
        return_content: yes
      register: ip_data
      ignore_errors: true
      check_mode: no

    - name: Debug ip_data content
      debug:
        var: ip_data.content
      when: ip_data.content is defined

    - name: Debug failed status
      debug:
        var: ip_data.failed
      when: ip_data.failed is defined

    - name: Debug msg status
      debug:
        var: ip_data.msg
      when: ip_data.msg is defined

    - name: Debug status code
      debug:
        var: ip_data.status
      when: ip_data.status is defined

    - name: Parse JSON data
      set_fact:
        ip_list: "{{ ip_data.content | from_json }}"
      when: ip_data.content is defined and ip_data.status == 200
      ignore_errors: true

    - name: Check if JSON parsing failed or URL fetch failed
      fail:
        msg: "Failed to parse JSON data or fetch URL. Check 'ip_data' for details."
      when: ip_list is undefined or ip_data.failed or ip_data.status != 200

    - name: Gather existing UFW rules
      shell: ufw status numbered
      register: current_ufw_rules
      changed_when: false

    - name: Debug raw UFW output
      debug:
        var: current_ufw_rules.stdout_lines

    - name: Extract rule details
      set_fact:
        ufw_rules_list: >-
          {% set rules = [] %}
          {% for line in current_ufw_rules.stdout_lines %}
            {% set parts = line.split() %}
            {% if parts|length >= 5 %}
              {% set rule = {'num': parts[0]|replace('[','')|replace(']','') , 'to': parts[1], 'action': parts[2], 'from': parts[3], 'comment': parts[4]} %}
              {{ rules.append(rule) }}
            {% else %}
              {{ debug("Skipping line: " ~ line) }}
            {% endif %}
          {% endfor %}
          {{ rules }}
      when: ip_list is defined

    - name: Debug parsed UFW rules
      debug:
        var: ufw_rules_list

    - name: Set facts for rules to be deleted
      set_fact:
        rules_to_delete: >-
          {% set delete_list = [] %}
